"""
Тестовый пакет для оптимизаторов машинного обучения.

Этот пакет содержит модульные тесты для различных оптимизаторов, реализованных в пакете `optimizers`.
Тесты написаны с использованием библиотеки `pytest` и проверяют корректность работы оптимизаторов,
включая инициализацию, валидацию параметров, обновление параметров, регуляризацию, управление скоростью
обучения, обрезку градиентов, историю и другие аспекты.

Структура тестов:
Каждый оптимизатор имеет свой тестовый файл в директории `tests`, названный в формате `test_<optimizer>.py`.
Список тестовых файлов и соответствующих оптимизаторов:

- `test_AMSGrad.py`: Тесты для оптимизатора AMSGrad (вариант Adam с адаптивной коррекцией второго момента).
- `test_RMSp.py`: Тесты для оптимизатора RMSProp (сглаживание градиентов с моментом).
- `test_SGD.py`: Тесты для оптимизатора SGD (стохастический градиентный спуск с моментом).
- `test_adagrad.py`: Тесты для оптимизатора Adagrad (адаптивная скорость обучения на основе суммы квадратов градиентов).
- `test_adam.py`: Тесты для оптимизатора Adam (адаптивные моменты с экспоненциальным сглаживанием).
- `test_gd.py`: Тесты для базового градиентного спуска (GD).
- `test_mars.py`: Тесты для оптимизатора MARS (Momentum with Adaptive Regularization Scaling).
- `test_sophia.py`: Тесты для оптимизатора Sophia (скалярная адаптивная оптимизация).
- `test_adan.py`: Тесты для оптимизатора Adan (Adaptive Nesterov Momentum).
- `test_adamw.py`: Тесты для оптимизатора AdamW (Adam с декуплированной регуляризацией).
- `test_lion.py`: Тесты для оптимизатора Lion (EvoLved Sign Momentum).
- `test_lars.py`: Тесты для оптимизатора LARS (Layer-wise Adaptive Rate Scaling).

Каждый тестовый файл включает тесты для:
- Инициализации параметров и их валидации.
- Сброса состояния оптимизатора.
- Обновления параметров (основной шаг оптимизации).
- Обрезки градиентов (если поддерживается).
- Управления скоростью обучения (через `decay_rate` или `lr_scheduler`).
- Регуляризации (декуплированной или через `reg_type`).
- Отслеживания истории параметров.
- Вызова callback-функций (`on_step`).
- Корректности методов `get_config` и `__repr__`.

----------------------------------------------------------------------------------------------------------------
Запуск всех тестов:
pytest tests/

Запуск тестов для одного оптимизатора, например LARS:
pytest tests/test_lars.py

Для подробного вывода добавьте -v:
pytest tests/ -v
----------------------------------------------------------------------------------------------------------------

"""

__version__ = "0.1.0"
__author__ = "Alexander Ponomarev"
